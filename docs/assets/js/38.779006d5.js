(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{174:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js","aria-hidden":"true"}},[t._v("#")]),t._v(" js")]),t._v(" "),s("p",[t._v("全栈   全端  pc端  移动端")]),t._v(" "),s("p",[t._v("由布兰登艾奇发明        像java      ECMA   欧洲计算机制造商协会")]),t._v(" "),s("p",[t._v("1.ECMAscript       浏览器提供  2.BOM     3.DOM")]),t._v(" "),s("p",[t._v("作用; 写网页的动态效果   写网页的游戏   使用cookie  session    实现交互  发送表单from 发送ajax")]),t._v(" "),s("p",[t._v("ES5       ES6（包含2015 2016）      ES2017  15年变化 每年都以年份发布")]),t._v(" "),s("p",[t._v("基于事件 驱动的解释性、松散性语言  script标签引入js  中间不写代码   "),s("em",[s("strong",[t._v("src")])]),t._v("        url   href4    重定向  超链接引入 u")]),t._v(" "),s("h1",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("基于事件和对象驱动的解释性 松散型语言\n1.引入方式 1.外链  2.内嵌  3.重定向\n\n2.测试方式   1.alert()  2.console.log()   3.document.write()\n\n3.组成部分 \n1.ECMAscript    基础语法 \n2.BOM  浏览器对象模型\n3.DOM  文档对象模型               浏览器厂商发行   \n4.变量   就是内存的一块地址单元，为了存储数据\n1.定义 先声明再给赋值   直接复制  var nub,nub1; nub=200;   var nub=200,nub1='123'; const PI=3.14;\n\t2.关键字    var  let  const 声明直接复制\n\t3.命名方式   只能数字、字母、下划线、$符号命名 ，  数字不能开头 ，不能以关键字或者保留字命名\n\t\t\t\t1.用首字母大写 ，\n\t\t\t\t2.驼峰命名 ，\n\t\t\t\t3.严格区分大小写， \n\t\t\t\t4.有意义\n\t4.变量的存储  栈区  可以存储热河数据类型\n\t5.数据类型\n\t1.基础  \n\tNumber \n\t\t0b/0B   0o/0O   0x/0X\n\t\tNaN   not a number\n\tString  \n\t\t''\n\t\t\"\"\n\t\t``\n\t\t单引号不能嵌套单引号\n\t\t\\n  \\f  \\t  \\r  \\v\n\tBoolean \n\t\t1.true  2.false\n\tnull \n\t\t2.空对象\n\tundefined  \n\t\t1.一个变量，只声明不赋值， 默认值\n\t\t2.一个对象没有某个属性  这个属性\n\t\t3.数组里没有附某个下标的值\n\t\t4.函数参数不传值  默认\n\t\t5.函数返回值  默认返回\n\tsymbol\n\t2.引用 \n\t  1.数组 array \n    2.函数 function \n    3.对象 object\n    3.运算符\n    1.算术  \n\t1.+任何类型和字符串相加表示链接，相加变成字符串\n\t2.取余 不对小数取余数\n\t3.++  --   分先后，在前和在后不同   如果存在赋值的情况 +在前 先加后赋值  反之相反   。但不论在前还是后 这个运算的变量都会+1\n\t\n2.逻辑      结果不一定 是boolean类型值  只要运算停留在什么位置 结果就是什么。 但是&&，两边都的满足 ||两边满足一个 ，只要运算有这\t\t\t\t个结果立即停止运行\n              true&&1  //1\n              true||1  //true\n              null&&false  //null\n              1&&2   //2\n\t&&   ||   ! （一定是boolean类型）  !!1  boolean()\n3.比较\n  字符比较比较ascii码值的大小\n  undefined==null；为真\n  ==    ===    全等需要比较类型\n4.一元 三元 特殊\n\t\t1.new 用来创建对象\n\t\t2.delete 用来删除对象的属性\n\t\t3.typeof 用来检测基础数据类型\n\t\t4.var a=表达式? a:b   主要用来赋值\n\t\t5.instanceof   用来检测某个对象是否是某个构造函数的实例\n5.扩展\n\t\t...\n6.赋值\n4.流程控制\n1.概念 当满足某个条件按照一定顺序执行代码\n2.a.顺序  b.条件 if switch（通常用来判断单个值）c.循环 1.for 2.while 3.do while (循环次数不确定的情况下)\n1.声明方式  1.var arr=[]   2.var arr=new Array();  3.arr.length 数组长度\n2.访问访问方式设置方式\n        1.arr[1]  2.arr[1]=123;  3.arr['1']   4.arr['length']  5.arr.length\n3.数组遍历  1.for  2.for in\n4.二维数组\n一维数组的值都是数组的时候\n1.循环遍历 for  for\n5.数组  \n  function\n  var fun=function(){}\n  var fun=new Function(){}\n  1.函数的调用 一个函数如果不调用 永远不执行  \n        1.函数名字或者变量名字()\n        2.函数的自运行(function(){})()\n  2.函数的参数\n\t1.形式参数   函数在定义时的参数\n\t2.实际参数   函数在运行时的参数\n\t3.形参可以和实参的个数不同 如果一个形参没有被传参，默认传递undefined，如果一个实际参数没有相应的参数接收，剋提使用arguments，会默认接收所有传递的实际参数\n\t4.函数的形参可以接收任何类型的数据      引用类型 基础数据类型   相当于定义的局部变量  \n\t>函数的参数就是封装的接口\n\t5.当函数的参数传递的是函数的时候，这个函数就是回调函数\n\t\t*map filter foreach\n\t\t*需要处理的事情由回调函数处理\n\t例如 arr=[1,2,2];\n\tarr.forEach(function(value,index){\n      //在这定义要做的事情\n\t})\n\t3.函数的返回值\n\t\t*任何函数在运行结束后都会返回一个值，默认undefined\n\t\t*函数只能有一个返回值  但是可以有多条返回语句\n\t\t*函数一旦返回立即停止运行\n\t\t*fun()  这是一个表达式 ，表达式的值是函数的返回值\n\t\t*函数什么时候需要返回 ？  当我们需要用到内部的局部变量时，我们可以将变量的值返回\n\t\t例如 var sum=function(a,b){\n          var he=a+b;\n          return he;\n\t\t}\n\t\tvar num=sum(1,2)+123;\n\t4.函数的作用域和作用域链\n    \t1.作用域指的是变量或者函数在某个范围有意义\n    \t2.作用域链 当一个函数嵌套另一个函数，作用域发生嵌套  在一个函数运行的时候会自动创建一个集合，来保存可见范围内的可见变量。\n    \t这个集合就是作用域链\n    5.环境\n    \t1.宿主环境 （浏览器）\n    \t2.运行环境\n    \t\t1.全局环境 widow\n    \t\t2.局部环境 函数环境\n")])])]),s("hr"),t._v(" "),s("hr"),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("alert()  弹出窗口")]),t._v(" "),s("p",[t._v("外部  内部  重定向")]),t._v(" "),s("p",[t._v("调试  bug  1.alert(); 弹出窗口     2.console.log(); 控制台输出")]),t._v(" "),s("h1",{attrs:{id:"javascript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript","aria-hidden":"true"}},[t._v("#")]),t._v(" javascript")]),t._v(" "),s("h2",{attrs:{id:"js是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js是什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" js是什么？")]),t._v(" "),s("blockquote",[s("p",[t._v("js是一种基于事件和对象驱动的一种解释性(浏览器解释执行)、松散型的语言    var nub; 万能")])]),t._v(" "),s("blockquote",[s("p",[t._v("一切皆对象")])]),t._v(" "),s("h2",{attrs:{id:"变量-常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量-常量","aria-hidden":"true"}},[t._v("#")]),t._v(" 变量 常量")]),t._v(" "),s("blockquote",[s("p",[t._v("变量  常量 是计算机内存的一块地址单元")]),t._v(" "),s("p",[t._v("var num;     num=200;  申明比变量      let   目前与var 一样     不能声明一样的两个变量")]),t._v(" "),s("p",[t._v("一个等号是赋值")]),t._v(" "),s("p",[t._v("一旦有错 停止运行")]),t._v(" "),s("p",[t._v("运行顺序从上往下")]),t._v(" "),s("p",[t._v("常量  const pi=3.14;   一旦声明不能改变")])]),t._v(" "),s("h2",{attrs:{id:"命名规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命名规范","aria-hidden":"true"}},[t._v("#")]),t._v(" 命名规范")]),t._v(" "),s("blockquote",[s("p",[t._v("1.变量的命名要有意义")]),t._v(" "),s("p",[t._v("2.不能以数字开头，可以用数字，字母，下划线，$符号构成")]),t._v(" "),s("p",[t._v("3.不能以关键字或者是保留字构成")]),t._v(" "),s("p",[t._v("4.以首字母大写或者是以驼峰命名法命名")]),t._v(" "),s("p",[t._v("5.严格区分大小写")])]),t._v(" "),s("h2",{attrs:{id:"数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),s("h2",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#","aria-hidden":"true"}},[t._v("#")])]),t._v(" "),s("h3",{attrs:{id:"_1-基础数据类型-number-string-boolean-null-undefined-symbol"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-基础数据类型-number-string-boolean-null-undefined-symbol","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.基础数据类型  Number string boolean  null               undefined  symbol")]),t._v(" "),s("p",[t._v("1.number     数值类型  var nub=0x(表示16进制)   var nub=0o(表示8进制)  var nub=0b(2进制)")]),t._v(" "),s("p",[t._v("2.string     字符串           \" \"     ' '         `` var nub='uek';    \\n换行   \\r 回车   \\t制表符   \\f换页   \\v垂直制表符   \\表示转义字符")]),t._v(" "),s("p",[t._v("3.boolean   true  false")]),t._v(" "),s("p",[t._v("4.null  空 占位符")]),t._v(" "),s("p",[t._v("5.undefined  表示未定义   1.变量只声明不赋值   2.对象没有某一个属性  3.函数默认返回值  4.数组某一个位置没有值")]),t._v(" "),s("p",[s("strong",[t._v("undefined==null  为真")])]),t._v(" "),s("p",[t._v("6.symbol   表示不重复的值   "),s("strong",[t._v("ES6新增")])]),t._v(" "),s("h3",{attrs:{id:"_2-引用数据类型-代表性-函数function-对象object-数组array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-引用数据类型-代表性-函数function-对象object-数组array","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.引用数据类型   代表性  ( 函数function  对象object   数组array )")]),t._v(" "),s("h2",{attrs:{id:"-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#-2","aria-hidden":"true"}},[t._v("#")])]),t._v(" "),s("p",[t._v("typeof()  判断数据类型 只能用来检测基础数据类型")]),t._v(" "),s("p",[t._v("number  string   boolean  object")]),t._v(" "),s("p",[t._v("表达式=一切有值的东西都叫表达式")]),t._v(" "),s("p",[s("strong",[t._v("typeof(null);  检测出来是object     typeof 1;   加空格使用")])]),t._v(" "),s("h1",{attrs:{id:"运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" 运算符")]),t._v(" "),s("h3",{attrs:{id:"算术运算符-逻辑运算符-赋值运算符-比较运算符-三元运算符-一元运算符-特殊运算符-扩展运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算术运算符-逻辑运算符-赋值运算符-比较运算符-三元运算符-一元运算符-特殊运算符-扩展运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" 算术运算符   逻辑运算符  赋值运算符   比较运算符   三元运算符   一元运算符     特殊运算符  扩展运算符")]),t._v(" "),s("h4",{attrs:{id:"_1-算术运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-算术运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.算术运算符")]),t._v(" "),s("p",[t._v("+-*/  不适合精确运算  独特的存储的方式决定")]),t._v(" "),s("p",[t._v("取余%   不对小数取余   ‘ ’+‘ ’  字符串连接  任何一种类型和字符串进行相加表示连接    ${ }")]),t._v(" "),s("p",[t._v("单引号和双引号不能交叉和同类嵌套                        "),s("strong",[t._v("``  template    模板字符串        ${}")])]),t._v(" "),s("p",[t._v("++  --   一元运算符       nub++   ==   nub=nub+1    ++nub    赋值时有变化")]),t._v(" "),s("p",[s("strong",[t._v("document.write( ); 写入页面")])]),t._v(" "),s("p",[s("strong",[t._v("隐式")]),t._v(" 算术运算进行运行 调用Number 能转则转")]),t._v(" "),s("h4",{attrs:{id:"_2-逻辑运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-逻辑运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.逻辑运算符")]),t._v(" "),s("p",[t._v("与或非")]),t._v(" "),s("ol",[s("li",[s("p",[t._v(".&&（  与 和  且）")])]),t._v(" "),s("li",[s("p",[t._v("||（或）")])]),t._v(" "),s("li",[s("p",[t._v("！（取反）     结果一定布尔运算值")]),t._v(" "),s("p",[t._v("“” 0 null undefined  false   NaN  ( not a number )    假     其余都为真")]),t._v(" "),s("p",[t._v("真假确定运算停留的地方    求出结果运算立刻停止")])])]),t._v(" "),s("h4",{attrs:{id:"_3-赋值运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-赋值运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.赋值运算符")]),t._v(" "),s("p",[t._v("nub=nub+100    <==>     nub+=100")]),t._v(" "),s("p",[t._v("nub=nub-100    <==>     nub-=100")]),t._v(" "),s("p",[t._v("nub=nub/100    <==>     nub/=100")]),t._v(" "),s("p",[t._v("nub=nub"),s("em",[t._v("100    <==>     nub")]),t._v("=100")]),t._v(" "),s("p",[t._v("nub=nub%10    <==>     nub%=10")]),t._v(" "),s("p",[t._v("​       +=   /=  *=    -=   %=     简写")]),t._v(" "),s("h4",{attrs:{id:"_4-比较运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-比较运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.比较运算符")]),t._v(" "),s("p",[s("code",[t._v("> < >= <= != = == ===")])]),t._v(" "),s("p",[t._v("ASCII码   0 :48   A :65   a : 97")]),t._v(" "),s("p",[t._v("EASCII码")]),t._v(" "),s("p",[t._v("GB2312码   简体     微软制作  GBK   包含繁体")]),t._v(" "),s("p",[t._v("unicode   uth8  是unicode在网络传播形式")]),t._v(" "),s("p",[t._v('存在转化 console.log(10=="100");  true    console.log(10==="100");   false   数值类型相等')]),t._v(" "),s("p",[s("strong",[t._v("null=undefined为真， 特殊情况")])]),t._v(" "),s("p",[s("strong",[t._v("null=false 为假")])]),t._v(" "),s("h4",{attrs:{id:"_5-三元运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-三元运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" 5.三元运算符")]),t._v(" "),s("p",[t._v("目的是为了赋值     ?  :      document.body.scrollTop?   document.body: document.documentElement;")]),t._v(" "),s("p",[t._v("条件     真 赋值:前者  假  赋值:后边       ?      :")]),t._v(" "),s("h4",{attrs:{id:"_6-扩展运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-扩展运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" 6.扩展运算符")]),t._v(" "),s("blockquote",[s("p",[t._v("...  扩展运算符")])]),t._v(" "),s("blockquote",[s("p",[t._v("document.write 写入到页面")])]),t._v(" "),s("blockquote",[s("p",[t._v('""\t 0\t null\t undefined\t false\t NaN 都是假')])]),t._v(" "),s("blockquote",[s("p",[t._v("new 是用来创建对象的  delete 是用来删除对象的属性 typeof 都属于一元运算符")])]),t._v(" "),s("h4",{attrs:{id:"_7-一元运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-一元运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" 7.一元运算符")]),t._v(" "),s("p",[t._v("new 是用来创建对象的  delete 是用来删除对象的属性 typeof 判断基础数据类型             都属于一元运算符")]),t._v(" "),s("h2",{attrs:{id:"流程控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#流程控制","aria-hidden":"true"}},[t._v("#")]),t._v(" 流程控制")]),t._v(" "),s("blockquote",[s("p",[t._v("按照一定的顺序去执行")])]),t._v(" "),s("blockquote",[s("p",[t._v("顺序结构")])]),t._v(" "),s("blockquote",[s("p",[t._v("条件结构")])]),t._v(" "),s("p",[t._v("1.if(){")]),t._v(" "),s("p",[t._v("}")]),t._v(" "),s("p",[t._v("2.switch(){")]),t._v(" "),s("p",[t._v("​\tcase 1: ;  break;   运行当前  代码")]),t._v(" "),s("p",[t._v("​\tcase 2: ;")]),t._v(" "),s("p",[t._v("​\tdefault: ;")]),t._v(" "),s("p",[t._v("}                            判断单个值  有限的值  可以枚举")]),t._v(" "),s("p",[t._v("​\t循环结构\t\t\t重复执行某一段代码")]),t._v(" "),s("blockquote",[s("p",[t._v("for(  ;  ; ){")]),t._v(" "),s("p",[t._v("​\t}")]),t._v(" "),s("p",[t._v("while(){")]),t._v(" "),s("p",[t._v("布进值")]),t._v(" "),s("p",[t._v("​\t}")]),t._v(" "),s("p",[t._v("do{")]),t._v(" "),s("p",[t._v("布进值   do一定会执行一次 先执行再判断条件")]),t._v(" "),s("p",[t._v("​\t}while()")])]),t._v(" "),s("blockquote",[s("p",[t._v("for(var i=10;i<=8848;i++)")])]),t._v(" "),s("h1",{attrs:{id:"_1-数组-array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-数组-array","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.数组 array")]),t._v(" "),s("blockquote",[s("p",[t._v("数组就是一系列有直接或者是联系的数据的集合")])]),t._v(" "),s("blockquote",[s("p",[t._v("arr.length")])]),t._v(" "),s("blockquote",[s("p",[t._v("1.var arr=[]   2.var arr=new Array();   Array   js内置函数")])]),t._v(" "),s("blockquote",[s("p",[t._v("打擂台法 选择排序")])]),t._v(" "),s("pre",[s("code",[t._v("1.声明方式  1.var arr=[]   2.var arr=new Array();  3.arr.length 数组长度\n2.访问访问方式设置方式\n        1.arr[1]  2.arr[1]=123;  3.arr['1']   4.arr['length']  5.arr.length\n3.数组遍历  1.for  2.for in\n4.二维数组\n一维数组的值都是数组的时候\n1.循环遍历 for  for\n")])]),t._v(" "),s("h2",{attrs:{id:"检测"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#检测","aria-hidden":"true"}},[t._v("#")]),t._v(" 检测")]),t._v(" "),s("h5",{attrs:{id:"var-result-arr-instanceof-array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#var-result-arr-instanceof-array","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("strong",[t._v("var result=arr instanceof Array;")])]),t._v(" "),s("h5",{attrs:{id:"constructor-表示数组的结构-array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#constructor-表示数组的结构-array","aria-hidden":"true"}},[t._v("#")]),t._v(" **constructor   表示数组的结构    Array() **")]),t._v(" "),s("h5",{attrs:{id:"instanceof-用来检测某个对象是否是某个构造函数的实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#instanceof-用来检测某个对象是否是某个构造函数的实例","aria-hidden":"true"}},[t._v("#")]),t._v(" instanceof   用来检测某个对象是否是某个构造函数的实例")]),t._v(" "),s("blockquote",[s("p",[t._v("检测arr是否是数组对象array的实例;")])]),t._v(" "),s("h4",{attrs:{id:"arguments接收所有的参数，集合；"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arguments接收所有的参数，集合；","aria-hidden":"true"}},[t._v("#")]),t._v(" arguments接收所有的参数，集合；")]),t._v(" "),s("p",[s("strong",[t._v("typeof(null);  检测出来是object     typeof 1;   加空格使用")])]),t._v(" "),s("h1",{attrs:{id:"_2-函数-function"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-函数-function","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.函数 function")]),t._v(" "),s("blockquote",[s("p",[t._v("函数是将实现某一特定功能的代码块封装起来以便重复使用")]),t._v(" "),s("h5",{attrs:{id:"函数的定义-函数的运行函数的参数问题函数的返回值函数的作用域回调函数递归函数闭包预解析垃圾处理机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数的定义-函数的运行函数的参数问题函数的返回值函数的作用域回调函数递归函数闭包预解析垃圾处理机制","aria-hidden":"true"}},[t._v("#")]),t._v(" 函数的定义\t\t 函数的运行\t\t函数的参数问题\t\t函数的返回值\t\t函数的作用域\t\t回调函数\t\t递归函数\t\t闭包\t预解析\t垃圾处理机制")])]),t._v(" "),s("h2",{attrs:{id:"_1-函数定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-函数定义","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.函数定义")]),t._v(" "),s("h4",{attrs:{id:"_1-以关键字function的方式定义函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-以关键字function的方式定义函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.以关键字function的方式定义函数")]),t._v(" "),s("blockquote",[s("p",[t._v("funtion  fun(){")]),t._v(" "),s("p",[t._v("}")])]),t._v(" "),s("h4",{attrs:{id:"_2-以字面量的方式去定义函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-以字面量的方式去定义函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.以字面量的方式去定义函数")]),t._v(" "),s("blockquote",[s("p",[t._v("var fun=function(){")]),t._v(" "),s("p",[t._v("}")])]),t._v(" "),s("h4",{attrs:{id:"_3-var-fun-new-function-字符串的方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-var-fun-new-function-字符串的方式","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.   var fun=new Function('字符串的方式');")]),t._v(" "),s("h2",{attrs:{id:"_2-函数参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-函数参数","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.函数参数")]),t._v(" "),s("p",[t._v("传值    传址")]),t._v(" "),s("h5",{attrs:{id:"栈区（基础数据）-堆区（引用数据-函数-数组-对象-传地址-数据更改-发生改变）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈区（基础数据）-堆区（引用数据-函数-数组-对象-传地址-数据更改-发生改变）","aria-hidden":"true"}},[t._v("#")]),t._v(" 栈区（基础数据）   堆区（引用数据 函数 数组 对象     传地址  数据更改   发生改变）")]),t._v(" "),s("blockquote",[s("p",[t._v("写在函数定义时的括号里的参数叫形式参数。")]),t._v(" "),s("p",[t._v("写在函数调用时的括号里的参数叫实际参数")]),t._v(" "),s("p",[t._v("形式参数的作用就是用来接收实际参数的")]),t._v(" "),s("p",[t._v("形式参数的个数可以不同，形式参数和实际参数对应赋值")]),t._v(" "),s("p",[t._v("没有传值的参数默认是undefined，")]),t._v(" "),s("p",[t._v("所有的实际参数会被anguments集合接收")])]),t._v(" "),s("h2",{attrs:{id:"_3-函数运行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-函数运行","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.函数运行")]),t._v(" "),s("blockquote",[s("pre",[s("code",[t._v("function fun(i){\n```none\n\treturn String(i).length;\n```\n}\n\ndocument.write(fun(********));\n\n匿名函数自运行\n\n```CSS\n(function (){\narlet(1)\n})()\n```\n")])])]),t._v(" "),s("h2",{attrs:{id:"_4-函数的作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-函数的作用域","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.函数的作用域")]),t._v(" "),s("blockquote",[s("p",[t._v("1.js的运行依赖于浏览器       浏览器是js的宿主环境")]),t._v(" "),s("p",[t._v("2.执行环境       1 全局环境    2局部环境")])]),t._v(" "),s("h4",{attrs:{id:"_1-全局环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-全局环境","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.全局环境")]),t._v(" "),s("blockquote",[s("p",[t._v("全局环境指的是window")]),t._v(" "),s("p",[t._v("定义在全局环境中的变量叫全局变量   拥有全局的作用域 任何位置都可以访问")])]),t._v(" "),s("h4",{attrs:{id:"_2-局部环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-局部环境","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.局部环境")]),t._v(" "),s("blockquote",[s("p",[t._v("局部环境指的是  函数")]),t._v(" "),s("p",[t._v("定义在局部环境中的变量叫局部变量  拥有局部作用域 当前环境访问")])]),t._v(" "),s("h3",{attrs:{id:"_3-块级作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-块级作用域","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.块级作用域")]),t._v(" "),s("h4",{attrs:{id:"作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域","aria-hidden":"true"}},[t._v("#")]),t._v(" 作用域")]),t._v(" "),s("blockquote",[s("p",[t._v("变量在某个范围内有意义称之为作用域")]),t._v(" "),s("p",[t._v("块级作用域   变量在某个范围内有意义")]),t._v(" "),s("h6",{attrs:{id:"作用域链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域链","aria-hidden":"true"}},[t._v("#")]),t._v(" 作用域链")]),t._v(" "),s("p",[t._v("一个函数嵌套另外一个函数时，他们的关系会发生嵌套从而产生作用域链")]),t._v(" "),s("p",[t._v("当函数在运行的时候，会自动的创建一个集合，来保存可见范围内所有的变量，这个集合就是作用域链，")])]),t._v(" "),s("h2",{attrs:{id:"_5-预解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-预解析","aria-hidden":"true"}},[t._v("#")]),t._v(" 5.预解析")]),t._v(" "),s("p",[t._v("1.在程序真正开始运行之前 js会将以var声明的变量和以function关键字声明的函数，提前加载到相对应的环境里面")]),t._v(" "),s("p",[t._v("2.预解析是分块解析的，但是所有的script标签对又是一个整体，已经加载的script内容可以在后边的script里访问")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nub"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nub"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nub"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//200")]),t._v("\n")])])]),s("h2",{attrs:{id:"_6-闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-闭包","aria-hidden":"true"}},[t._v("#")]),t._v(" 6.闭包")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("当一个函数，嵌套另外一个函数，在内部函数中使用了外部的局部变量，在外部去访问内部函数的时候，就形成了闭包")])]),t._v(" "),s("p",[t._v("闭包的作用：保存局部变量")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("aa")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nub"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bb")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nub"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" bb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fun"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("aa")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//200")]),t._v("\n按照垃圾处理，aa运行结束后后，内部"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("应该被清除\n但是将bb函数返回，在外部调用时，会用到nub局部变量，js将这个变量保留下来\n")])])]),s("h2",{attrs:{id:"_7-垃圾处理机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-垃圾处理机制","aria-hidden":"true"}},[t._v("#")]),t._v(" 7.垃圾处理机制")]),t._v(" "),s("blockquote",[s("p",[t._v("1.当一个函数运行结束之后，里边的变量会立刻被销毁")]),t._v(" "),s("p",[t._v("2.当一个对象不再被引用之后，那么这个对象会在某一个时刻进行删除")])]),t._v(" "),s("h2",{attrs:{id:"_8-函数的返回值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-函数的返回值","aria-hidden":"true"}},[t._v("#")]),t._v(" 8.函数的返回值")]),t._v(" "),s("blockquote",[s("p",[t._v("没有定义返回值的时候  默认  undefined")])]),t._v(" "),s("h2",{attrs:{id:"_9-递归函数-函数的回调"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-递归函数-函数的回调","aria-hidden":"true"}},[t._v("#")]),t._v(" 9.递归函数   函数的回调")]),t._v(" "),s("p",[t._v("回调函数：当一个函数作为另外一个函数的参数的时候，这个函数就是回掉函数。")]),t._v(" "),s("p",[t._v("函数自己调用自己就叫递归。  消耗内存")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("阶乘  n！   菲波那锲数  1  2  3  5  8  13.。。。n\n")])])]),s("p",[t._v("1.模拟数组的访问  对象的访问")]),t._v(" "),s("p",[t._v("obj['a'] obj[0]")]),t._v(" "),s("p",[t._v("创建数组")]),t._v(" "),s("p",[t._v("2.递归函数复制数组")]),t._v(" "),s("p",[t._v("一维  brr.push(arr[i]);    一个for 循环")]),t._v(" "),s("p",[t._v("二维     两个for循环")]),t._v(" "),s("p",[t._v("判断  if    是数组   执行函数")]),t._v(" "),s("p",[t._v("else")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//                  递归函数复制数组")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("copy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("brr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//遍历要复制的数组")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断arr数组的里的数是否为数组   如果是")]),t._v("\n                    brr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置brr数组的数为空数组")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("copy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("brr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//执行自身函数进行复制")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//若arr数组的数不是数组")]),t._v("\n                    brr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将arr的值赋值为brr")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" brr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  返回复制后的brr")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" brr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("copy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("brr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h5",{attrs:{id:"_1-深拷贝-数组全部拷贝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-深拷贝-数组全部拷贝","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.深拷贝  数组全部拷贝")]),t._v(" "),s("h5",{attrs:{id:"_2-浅拷贝-拷贝数组的第一层"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-浅拷贝-拷贝数组的第一层","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.浅拷贝  拷贝数组的第一层")]),t._v(" "),s("h2",{attrs:{id:"_10-函数的重载-js不会"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-函数的重载-js不会","aria-hidden":"true"}},[t._v("#")]),t._v(" 10.函数的重载(js不会)")]),t._v(" "),s("blockquote",[s("p",[t._v("根据函数的参数不同   个数不同来调用不同的函数")])]),t._v(" "),s("h2",{attrs:{id:"_11-内置顶层函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-内置顶层函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 11.内置顶层函数")]),t._v(" "),s("p",[t._v("1.Number()")]),t._v(" "),s("p",[t._v("2.String()")]),t._v(" "),s("p",[t._v("3.Boolean()")]),t._v(" "),s("p",[t._v("4.parseInt()")]),t._v(" "),s("p",[t._v("5.parseFloat()")]),t._v(" "),s("p",[t._v("6.isNan()")]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"_1-number"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-number","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.Number()")]),t._v(" "),s("p",[t._v("Number() 函数把对象的值转换为数字。")]),t._v(" "),s("p",[t._v("如果参数是 Date 对象，Number() 返回从 1970 年 1 月 1 日至今的毫秒数。")]),t._v(" "),s("p",[t._v("如果对象的值无法转换为数字，那么 Number() 函数返回 NaN。")]),t._v(" "),s("blockquote",[s("p",[t._v("将其他类型转化为数值类型   '123'  null   true   false")]),t._v(" "),s("p",[t._v("null 转化为0    true为1         false 为0")]),t._v(" "),s("p",[t._v("NAN是Number的特殊值")])]),t._v(" "),s("h4",{attrs:{id:"_2-parseint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-parseint","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.parseInt()")]),t._v(" "),s("blockquote",[s("h5",{attrs:{id:"主要用于转化字符串-转换能转换的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主要用于转化字符串-转换能转换的","aria-hidden":"true"}},[t._v("#")]),t._v(" 主要用于转化字符串      转换能转换的")])]),t._v(" "),s("blockquote",[s("p",[t._v("将小数转化成整数")]),t._v(" "),s("p",[t._v('console.log(parseInt("1234abcd,16"))')])]),t._v(" "),s("blockquote",[s("p",[t._v("隐式数据类型")]),t._v(" "),s("p",[t._v("在进行算数运算时，隐性的调用Nub函数进行尝试转换")]),t._v(" "),s("p",[t._v("null=undefined为真     特殊情况")]),t._v(" "),s("p",[t._v("null==false 为假   特殊情况")])]),t._v(" "),s("h1",{attrs:{id:"_3-对象-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-对象-object","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.对象 object")]),t._v(" "),s("p",[t._v("将一些具有某些特性的对象的特征抽象起来形成类。类也可以作为对象的判别，也可以创建对象")]),t._v(" "),s("p",[s("strong",[t._v("类是对象的抽象  对象是类的实例化")])]),t._v(" "),s("h4",{attrs:{id:"_1-面向对象-js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-面向对象-js","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.面向对象   js")]),t._v(" "),s("h5",{attrs:{id:"_1-封装-2-继承-3-多态-js的继承方式独特-不说其他两种"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-封装-2-继承-3-多态-js的继承方式独特-不说其他两种","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.封装  2.继承  3.多态     js的继承方式独特   不说其他两种")]),t._v(" "),s("p",[t._v("继承：首先的有构造函数（一般首字母大写） 公共        主要在实例化也是 new的时候  obj."),s("strong",[s("strong",[t._v("proto")])]),t._v("==构造函数.prototype")]),t._v(" "),s("h5",{attrs:{id:"每个函数的属性-prototype-它的值是对象-主要用于继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#每个函数的属性-prototype-它的值是对象-主要用于继承","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("strong",[t._v("每个函数的属性   prototype   它的值是对象    主要用于继承")])]),t._v(" "),s("p",[t._v("Person.prototype.fun=function(){")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("p",[t._v("​\t}")]),t._v(" "),s("p",[t._v("对象可以添加属性   方法")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("new  新对象  发生三件事情 \n        1.创建空对象obj  \n        2.obj的属性  obj.__proto__=构造函数.prototype\n        3.Person.call(obj)   每个函数都有call方法  call改变this指针的指向  第一个参数传谁指向谁  执行函数 后边为参数\n                       <==>apply()          与call方法相似    参数必须数组来传\n\n\nfunction fun(){\n  this.name='123';\n}\nvar obj=new Object();\nfun.call(obj);   \nconsole.log(obj);\n\nPerson.prototype.__proto__==Object.prototype\nObject.prototype.__proto__==null       \n 继承链》》  \n var obj=new person();\n obj.__proto__=person.prototype\n person.prototype.__proto__==Object.prototype\n Object.prototype.__proto__==null   \n\nObject 顶层对象\n")])])]),s("p",[t._v("面向对象的编程方式")]),t._v(" "),s("p",[t._v("class 类  "),s("strong",[t._v("类是对象的抽象  对象是类的实例化")])]),t._v(" "),s("p",[t._v("研究的一切事物都是对象")]),t._v(" "),s("h4",{attrs:{id:"_2-面向过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-面向过程","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.面向过程")]),t._v(" "),s("p",[t._v("面向过程的编程方式")]),t._v(" "),s("hr"),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("{")]),t._v(" "),s("p",[t._v("键值")]),t._v(" "),s("p",[t._v('name: "lisi",')]),t._v(" "),s("p",[t._v("age: 20,")]),t._v(" "),s("p",[t._v("}>>>对象  对象的值可以任何类型  属性和属性中间用逗号隔开  函数称为方法")]),t._v(" "),s("p",[t._v("js早期没有类的概念   用构造函数创建类")]),t._v(" "),s("p",[t._v("研究的事物就是对象  和数组类似")]),t._v(" "),s("h4",{attrs:{id:"_1-以json格式去创建对象-原生的json-键值对的形式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-以json格式去创建对象-原生的json-键值对的形式","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.以json格式去创建对象   原生的json   键值对的形式")]),t._v(" "),s("p",[t._v("var obj={")]),t._v(" "),s("p",[t._v("​\t\t创建对象")]),t._v(" "),s("p",[t._v("​\t\t属性: 属性值;   函数（方法）  属性的值可以是任何数据类型")]),t._v(" "),s("p",[t._v("属性加引号和不加引号的表现方式一样")]),t._v(" "),s("p",[t._v("};")]),t._v(" "),s("p",[t._v("属性访问方法1. obj.name      2.obj['name']")]),t._v(" "),s("h4",{attrs:{id:"_2-构造函数的方式创建对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-构造函数的方式创建对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.构造函数的方式创建对象")]),t._v(" "),s("p",[t._v("function fun(){")]),t._v(" "),s("p",[t._v("}")]),t._v(" "),s("p",[t._v("fun.prototype={")]),t._v(" "),s("p",[t._v("​\txxx:function(){")]),t._v(" "),s("p",[t._v("​\t}")]),t._v(" "),s("p",[t._v("}")]),t._v(" "),s("p",[t._v("var obj=new fun();   var obj=new class();")]),t._v(" "),s("p",[t._v("1.一个对象创建的时候   初始化")]),t._v(" "),s("p",[t._v("2."),s("strong",[t._v("构造函数的作用为了提供对象的初始化")])]),t._v(" "),s("p",[t._v("3.this 指针 指向外部实例化对象")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("​\tthis")]),t._v(" "),s("p",[t._v("谁调用函数 this指向谁    默认widow调用  *")]),t._v(" "),s("p",[t._v("new function(){};  构造函数")]),t._v(" "),s("h5",{attrs:{id:"构造函数和普通函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造函数和普通函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 构造函数和普通函数")]),t._v(" "),s("p",[t._v("​\t*构造函数提供对象的初始化")]),t._v(" "),s("p",[t._v("​\t*构造函数一般不用定义返回值")]),t._v(" "),s("p",[t._v("​\t*构造函数内部使用this")]),t._v(" "),s("p",[t._v("​\t*都是new 构造函数")]),t._v(" "),s("p",[t._v("​\t*普通函数为了实现某一个具体的功能")])])]),t._v(" "),s("h4",{attrs:{id:"_3-通过object的方式创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-通过object的方式创建","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.通过object的方式创建")]),t._v(" "),s("p",[t._v("var obj=new Object();    一般应用于创建空对象    一般不用")]),t._v(" "),s("p",[t._v("任何一个对象都可以看成是object创建的    所有对象都继承object")]),t._v(" "),s("h2",{attrs:{id:"对象划分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象划分","aria-hidden":"true"}},[t._v("#")]),t._v(" 对象划分")]),t._v(" "),s("h3",{attrs:{id:"_1-浏览器对象-（宿主对象）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-浏览器对象-（宿主对象）","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.浏览器对象  （宿主对象）")]),t._v(" "),s("p",[t._v("window")]),t._v(" "),s("h3",{attrs:{id:"_2-内置对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-内置对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.内置对象")]),t._v(" "),s("p",[t._v("Object  Function Array   String   RegExp  Date   Math  等")]),t._v(" "),s("p",[t._v("方法：1. 数组对象  2.字符串对象  3.数学对象")]),t._v(" "),s("p",[t._v("var arr=[];")]),t._v(" "),s("p",[t._v("arr.push();")]),t._v(" "),s("h5",{attrs:{id:"-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#-3","aria-hidden":"true"}},[t._v("#")])]),t._v(" "),s("h4",{attrs:{id:"console-dir-输出数据的结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#console-dir-输出数据的结构","aria-hidden":"true"}},[t._v("#")]),t._v(" console.dir(输出数据的结构);")]),t._v(" "),s("h5",{attrs:{id:"删除对象-将对象赋空-obj-null-删除对象的属性-delete-obj-name"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除对象-将对象赋空-obj-null-删除对象的属性-delete-obj-name","aria-hidden":"true"}},[t._v("#")]),t._v(" * 删除对象  将对象赋空  obj=null;       删除对象的属性      delete obj.name;")]),t._v(" "),s("p",[t._v("var width=document,documentElement.clientWidth;")]),t._v(" "),s("p",[t._v("var height=document,documentElement.clientHeight;")]),t._v(" "),s("hr"),t._v(" "),s("hr"),t._v(" "),s("hr"),t._v(" "),s("h1",{attrs:{id:"什么-怎么用-返回值-对原字符串-原数组有无影响"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么-怎么用-返回值-对原字符串-原数组有无影响","aria-hidden":"true"}},[t._v("#")]),t._v(" /"),s("em",[t._v("什么  怎么用 返回值 对原字符串 原数组有无影响")]),t._v("/")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v("\n////数组    基本上都会对原数组发生影响\n              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*  var arr=[];\n//        1.push()    向数组的末尾添加一个或更多元素，并返回新的长度。\n                console.log(arr.push(1,2,3));   //3\n                console.log(arr);  //[1,2,3]\n//        2.pop()   删除并返回数组的最后一个元素\n                console.log(arr.pop());// 3\n                console.log(arr);//[1,2]*/")]),t._v("\n\n               "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* var brr=[];\n//        3.unshift()  向数组的开头添加一个或更多元素，并返回新的长度\n                console.log(brr.unshift(1,2,3));  //3\n                console.log(brr)     //[1,2,3]\n//        4.shift()   删除并返回数组的第一个元素\n                console.log(brr.shift());   //1\n                console.log(brr);  //[2,3]*/")]),t._v("\n//    1~2 正常的栈操作   3~4 反向的栈操作\n//        5."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n//"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 方法可从已有的数组中返回选定的元素。\n//它的两个参数分别指定了片段开始和结束的位置（a,b）。返回的是从a开始到b的不包括b的数组元素。\n//如果只有一个参数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".则代表从a到数组结尾的元素。\n//如果参数中出现负数（-a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(". 则表示相对于数组中最后一个元素相距a的位置。比如（-3）代表倒数第三个元素到末尾\n//出现负数就先换算出来，然后按照范围规则找出来\n//返回新的数组，不会修改原始数组\n           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* var arr=[1,2,3,4,5,6];\n            console.log(arr.slice(1,4));    //[2,3,4]\n            console.log(arr.slice(2));      //[3,4,5,6]\n            console.log(arr.slice(-3));     //[4,5,6]\n            console.log(arr.slice(-3,-1));  //[4,5]\n            console.log(arr.slice(1,-1));   //[2,3,4,5]*/")]),t._v("\n//        6."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     它会修改原始数组的值    删除元素，并向数组添加新元素   万能的截取\n//Array."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("方法是在数组中插入或者删除元素的通用方法。它会修改原始数组的值，并返回一个删除的数组序列\n//"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("的第一个参数指定了插入或删除的起始位置，第二个参数指定了应该从数组中删除的元素的个数   第三个参数添加的元素\n//第二个参数省略则默认删到末尾。\n               "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* var arr=[1,2,3,4,5,6,7,8];\n                console.log(arr.splice(1,2));  //[2,3]\n                console.log(arr);      //[1,4,5,6,7,8]\n                console.log(arr.splice(2));   //[3,4,5,6,7,8]*/")]),t._v("\n//        7."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  合并数组\n//Array."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("方法创建并返回一个新数组，它的元素包括调用"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("的原始数组的元素和"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("的每个参数。\n//如果这些参数中的任何一个自身是数组，则连接的是数组的元素，而非数组本身。\n//但要注意，"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("不会递归扁平化数组的数组。                   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("也不会修改调用的数组。\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*var arr=[1,2,3,4];\n        console.log(arr.concat(5,6,7));  //[1,2,3,4,5,6,7]\n        console.log(arr);     //[1,2,3,4]\n        console.log(arr.concat(['a','b'],[5,6]))  //[1,2,3,4,'a','b',5,6]*/")]),t._v("\n//        8."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//Array."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("方法将数组中所有元素都转化为字符串并连接在一起，返回最后生成的字符串。  对原数组无影响\n//可以自己指定分隔的符号，如果不指定，默认使用逗号\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*var arr=[1,2,3];\n        console.log(arr.join('&'));\n        console.log(arr);*/")]),t._v("\n//        9."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n// Array."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("方法将数组中的元素颠倒顺序，返回逆序的数组（返回的数组是其本身，原始数组已经改变了）\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*var arr=[1,2,3];\n            arr.reverse();\n            console.log(arr);  //[3,2,1]    */")]),t._v("\n//\n//        10."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("some")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("some")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 方法用于检测数组中的元素是否有满足指定条件（函数提供）。\n//"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("some")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 方法会依次执行数组的每个元素：\n//如果有一个元素满足条件，则表达式返回true , 剩余的元素不会再执行检测。\n//如果没有满足条件的元素，则返回false。\n//注意： "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("some")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 不会对空数组进行检测。\n//注意： "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("some")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 不会改变原始数组。\n\n//检查是否有数组元素大于等于10：\n\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* function isBigEnough(element, index, array) {\n            return (element >= 10);\n        }\n        var passed = [2, 5, 8, 1, 4].some(isBigEnough);\n        console.log(passed);\n        // false\n        passed = [12, 5, 8, 1, 4].some(isBigEnough);\n        console.log(passed);\n        //  true*/")]),t._v("\n//        11."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("every")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("every")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 方法用于检测数组所有元素是否全部都符合指定条件（通过函数提供）。\n//"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("every")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 方法使用指定函数检测数组中的所有元素：\n//如果数组中检测到有一个元素不满足，则整个表达式返回 false ，且剩余的元素不会再进行检测。\n//如果所有元素都满足条件，则返回 true。\n//注意： "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("every")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 不会对空数组进行检测。\n//注意： "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("every")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 不会改变原始数组。\n\n//测试是否所有数组元素都大于等于10：\n\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* function isBigEnough(element, index, array) {\n            return (element >= 10);\n        }\n        var passed = [12, 5, 8, 130, 44].every(isBigEnough);\n        console.log(passed)\n        // passed is false\n        passed = [12, 54, 18, 130, 44].every(isBigEnough);\n        console.log(passed)\n        // passed is true*/")]),t._v("\n//        12."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 方法返回传入一个测试条件（函数）符合条件的数组第一个元素。\n//"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 方法为数组中的每个元素都调用一次函数执行：\n//当数组中的元素在测试条件时返回 true 时, "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 返回符合条件的元素，之后的值不会再调用执行函数。\n//如果没有符合条件的元素返回 undefined\n//"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("注意")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 对于空数组，函数是不会执行的。\n//"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("注意")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 并没有改变数组的原始值。\n\n           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* function bigOfNumber(i){\n                  return i>=5;\n            }\n            var nub=[4,2,3,6,7,2,3,5];\n            var nub1=nub.find(bigOfNumber);\n            console.log(nub1);    //6*/")]),t._v("\n//        13."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 方法返回传入一个测试条件（函数）符合条件的数组第一个元素位置。\n//"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 方法为数组中的每个元素都调用一次函数执行：\n//当数组中的元素在测试条件时返回 true 时, "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 返回符合条件的元素的索引位置，之后的值不会再调用执行函数。\n//如果没有符合条件的元素返回 -1\n//"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("注意")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 对于空数组，函数是不会执行的。\n//"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("注意")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 并没有改变数组的原始值。\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*function bigOfNumber(i){\n                    return i>=5;\n                }\n                var nub=[4,2,3,6,7,2,3,5];\n                var nub1=nub.findIndex(bigOfNumber);\n                console.log(nub1);   //3*/")]),t._v("\n//        14."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     从一个集合到另一个集合的映射 返回什么值形成什么值 value  index    用于对数据的再加工 \n//"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 方法返回一个新数组，数组中的元素为原始数组元素调用函数处理后的值。\n//"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 方法按照原始数组元素顺序依次处理元素。\n//注意： "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 不会对空数组进行检测。\n//注意： "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 不会改变原始数组。\n\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* //将所有的数组元素转换为大写：\n        var strings = ["hello", "Array", "WORLD"];\n        function makeUpperCase(v)\n        {\n            return v.toUpperCase();\n            //toUpperCase方法返回一个字符串，该字符串中的所有字母都被转换为大写字母。\n        }\n        var uppers = strings.map(makeUpperCase);\n        console.log(uppers);  //["HELLO", "ARRAY", "WORLD"]\n        console.log(strings); //["hello", "Array", "WORLD"]    */')]),t._v("\n//        15."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      value index\n//"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 方法创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素。\n//注意： "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 不会对空数组进行检测。\n//注意： "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 不会改变原始数组。\n           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* var arr=[1,2,3,4,5];\n            var arr1=arr.filter(function (value) {\n                return value>3;\n            })\n            console.log(arr1);   //[4,5]\n            var arr2=arr.filter(function (value) {\n                return value<2;\n            })\n            console.log(arr2);   //[1]*/")]),t._v("\t\n//        16."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value,index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  两个参数 值  下标                    目的为了遍历数组 \n//"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 方法用于调用数组的每个元素，并将元素传递给回调函数。  \n//"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("注意")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 对于空数组是不会执行回调函数的\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*var i=[1,2,3,4,5,6,7];\n            var sum=0;\n            i.forEach(function (t) {\n                sum+=t;\n            });\n            console.log(sum);   //28\n            console.log(i);   //[1,2,3,4,5,6,7]*/")]),t._v("\n//        17."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      \n//Array."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("方法将数组中的元素排序并返回排序后的数组。   返回数组地址\n//     在原数组上进行排序 ，不生成副本\n//当不带参数时，默认按照顺序排序，也就是从小到大。当然，也可以直接给sort加一个比较函数比较\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*var arr=[9,5,1,18];\n            arr.sort();\n            console.log(arr);   //[1,18,5,9]   */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*如果调用该方法时没有使用参数，将按字母顺序对数组中的元素进行排序，\n说得更精确点，是按照字符编码的顺序进行排序。要实现这一点，首先应把数组的元素都转换成字符串（如有必要）\n，以便进行比较。\n请注意，上面的代码没有按照数值的大小对数字进行排序，要实现这一点，就必须使用一个排序函数：*/")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* var brr=[80,16,50,6,100,1];\n           function fun(a,b) {\n               return a-b;    //从小到大\n           }\n           console.log(brr.sort(fun));   //[1,6,16,50,80,100]\n           function fun2(a,b){\n               return b-a;\n           }\n           console.log(brr.sort(fun2));  //[100,80,50,16,8,1]       */")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*排序思想应该是类似于冒泡排序思想的，通过前后相邻的两个数进行比较，\n例如80与16，这时将80作为方法函数fun(a,b)参数列表中的a，16作为b，\n通过语句return a - b;返回一个数值，80-16=64,\n 若返回值>0，则表示 a在排序后的序列中出现在 b 之后,所以80会在排序后出现在16之后，\n 此时，新的数据序列为16,80,50,6,100,1，再将80作为a，50作为b进行上述的做法，\n 第一轮下来，100就会排在最后，又开始新的一轮排序，就是类似于冒泡排序的思想吧。*/")]),t._v("\n//        18."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 方法用来判断一个数组是否包含一个指定的值 也判断类型，如果是，酌情返回 true或 false。\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*var arr=[1,2,3];\n            console.log(arr.includes(2));   //true\n            console.log(arr.includes(4));   //false*/")]),t._v("\n////        18\n//\n//\n////        字符串\n//        1."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//charAt方法返回指定索引位置处的字符。如果超出有效范围的索引值返回空字符串。\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*var str='abcde';\n        console.log(str.charAt(2));   //c\n        console.log(str.charAt(6));  //*/")]),t._v("\n//        2."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//charCodeAt方法返回一个整数，代表指定位置字符的Unicode编码。\n//index将被处理字符的从零开始计数的编号。有效值为0到字符串长度减1的数字。\n//如果指定位置没有字符，将返回NaN。\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*var str='abcde';\n            console.log(str.charCodeAt(2));   //99\n            console.log(str.charCodeAt(6));  //NaN*/")]),t._v("\n//        3."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromCharCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//fromCharCode方法从一些Unicode字符串中返回一个字符串。\n//使用语法 String."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromCharCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*console.log(String.fromCharCode(66,55,33));*/")]),t._v("\n\n//        4."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//indexOf方法放回String对象内第一次出现子字符串位置。如果没有找到子字符串，则返回-1。\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/*var str="Hello world, welcome to the universe.";\n            var n=str.indexOf("e");\n            var n1=str.indexOf("e",5);   由5位置从左向右查找 123...\n            var n2=str.indexOf("a");\n            console.log(n);   //1\n            console.log(n1);  //14\n            console.log(n2);   //-1*/')]),t._v("\n//        5."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lastIndexOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//lastIndexOf方法返回String对象中字符串最后出现的位置。如果没有匹配到子字符串，则返回-1。\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/*var str="Hello world, welcome to the universe.";\n            var n=str.lastIndexOf("e");\n            var n1=str.lastIndexOf("e",5);   //由5位置从右向左查找\n            var n2=str.lastIndexOf("a");\n            console.log(n);   //35\n            console.log(n1);  //1\n            console.log(n2);   //-1*/')]),t._v("\n//        6."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      参数 1.分割符  2.控制数字长度   \n//通过将字符串划分成子串，将一个字符串做成一个字符串数组。\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/*var arr="nihao";\n            var arr1=arr.split("");\n            console.log(arr1);   //["n", "i", "h", "a", "o"]*/')]),t._v("\n//        7."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  提取字符串的一部分，并返回一个新字符串（与 substring 相同）\n//返回被操作字符的子字符串，原字符串不变，接受两个参数，字符串的起始位置和结束位置，\n//返回的字符串不包含结束位置的字符，第一个参数要小于第二个参数，否则返回"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(",\n//    若只有一个参数，返回起始位置到字符串结尾的所有字符串，若传递的参数为负数，将传入的负值与字符创的长度相加\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/*var a=\'hello\'\n            var sub_string1 = a.slice(1);\n            console.log(sub_string1);  //ello\n            //sub_string1 = "ello"\n            var sub_string2 = a.slice(1,4);\n            console.log(sub_string2);  //ell\n            //sub_string2 = "ell"*/')]),t._v("\n//        8."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//返回指定位置开始的指定长度的字符串，原字符串不变，若第二个参数缺省就一直截取到字符串结束，\n//当传递的参数为负值时，方法会将负的第一个参数与字符串的长度相加，将负的第二个参数转化为0\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*var s = 'hello world!'\n            alert(s.substr(0, 5));//从索引0开始，截取5个字符串，返回hello\n            alert(s.substr(7)); //从索引7开始截取，一直到结束，返回orld!\n            alert(s.substr(-7,3));//负数与长度相加，即str.substr(5,3),返回 wo\n            alert(s.substr(-7,-3));//负数与长度相加，即str.substr(5,0),返回\"\"*/")]),t._v("\n//        9."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     不支持负数  \n//当传入的参数是正数时，substring与slice的功能基本相同，\n// 唯一的区别是当第一个参数大于第二个参数时，方法将第二个参数作为截取\n//的起始位置而将第一个参数作为截取结束的位置，且截取的字符串不包含第一个参数位置对应的值，\n//当传入的参数是负值时，该方法会将所有的负值转化为0\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/*var str = "hello world!";\n        alert(str.substring(3,7));//返回lo w\n        alert(str.substring(3));//返回lo world!\n        alert(str.substring(9,5));//返回 wor,即str.substring(5,9),不包含第九项\n        alert(str.substring(-7,-3));//负数与长度相加，即str.substring(0,0)返回""\n        alert(str.substring(-7,3));//负数与长度相加，即str.substring(0,3)返回hel*/')]),t._v("\n//        10."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//将一个或多个字符串拼接起来，返回拼接到的新的字符串，原字符串不变\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/*var str1 = "hello ";\n            var res = str1.concat(" world","!");\n            alert(res);//返回hello world！\n            alert(str1);//返回hello*/')]),t._v("\n//        11."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("endsWith")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//返回一个值，该值指示字符串或子字符串是否以另一个指定字符串结尾。\n//stringObj."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("endsWith")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str, [, position]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n//stringObj\n//必需。要搜索的字符串对象。\n//str\n//必需。搜索字符串。\n//position\n//可选。字符串对象中要搜索的以 0 开头的第一个字符的位置。\n//返回值\n//如果以 position 开始的字符串以搜索字符串结尾，endsWith 方法返回 true；否则返回 false。\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/*"abcd".endsWith("cd");   // true\n            "abcd".endsWith("e");    // false\n*/')]),t._v("\n//        12."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//返回一个布尔值，该值指示传入字符串是否包含在字符串对象中。\n//stringObj."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("substring [, position]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n//参数\n//stringObj\n//必需。要测试的字符串对象。\n//substring\n//必需。要测试的字符串。\n//position\n//可选。字符串对象中要测试的以 0 开头的第一个字符的位置。\n//返回值\n//如果传入的字符串包含在字符串对象中，则 includes 方法返回 true；否则返回 false\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/*\n        // Returns true\n        "abcde".includes("cd")\n        "abcde".includes("cd", 2)\n\n        // Returns false\n        "abcde".includes("CD")\n        "abcde".includes("cd", 3)*/')]),t._v("\n//        13."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    查找字符  替换字符   \n//使用正则表达式或搜索字符串替换字符串中的文本。\n//stringObj. "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rgExp, replaceText"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//参数\n//stringObj\n//必需。要执行替换的 String 对象或字符串文本。\n//replace 方法不会修改此字符串。相反，此方法的返回值是替换所生成的字符串。\n//rgExp\n//必需。包含正则表达式模式和适用标志的正则表达式对象的实例。\n//也可以是表示正则表达式的 String 对象或字符串文本。\n//如果 rgExp 不是正则表达式对象的实例，则将它转换为字符串，并对结果执行精确搜索；\n//不会尝试将字符串转换为正则表达式。\n//replaceText\n//必需。一个 String 对象或字符串文本，其中包含用于替换 stringObj 中 rgExp 的每个成功匹配项的文本\n//。在 Internet Explorer 5.5 或更高版本中，replaceText 参数也可以是返回替换文本的函数。\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*下面的示例阐释了如何使用 replace 方法将“the”的所有实例替换为“a”。*/")]),t._v("\n\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* var s = "the batter hit the ball with the bat";\n\n        // Replace "the" with "a".\n        var re = /the/g;  正则\n        var result = s.replace(re, "a");\n        document.write(result);    // Output: a batter hit a ball with a bat*/')]),t._v("\n//        14."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("startsWith")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//返回一个值，该值指示字符串或子字符串是否以另一个指定字符串开头。\n//stringObj."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("startsWith")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str, [, position]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n//stringObj\n//必需。要搜索的字符串对象。\n//str\n//必需。搜索字符串。\n//position\n//可选。字符串对象中要搜索的以 0 开头的第一个字符的位置。\n//返回值\n//如果以 position 开始的字符串以搜索字符串开头，则 startsWith 方法返回 true；否则返回 false。\n           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* "abcd".startsWith("ab"); // true\n            "abcd".startsWith("bc"); // false\n\n            "a".startsWith("a");     // true\n            "a".endsWith("a");       // true*/')]),t._v("\n\n//        15."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLowerCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//将字符串中的所有字母字符转换为小写形式。\n\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* var str1 = "This is a STRING.";\n        var str2 = str1. toLowerCase();\n        document.write(str2);   // Output: this is a string.*/')]),t._v("\n//        16."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//将字符串中的所有字母字符转换为大写形式。\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/*ar str1 = "This is a STRING.";\n        var str2 = str1.toUpperCase();\n        document.write(str2);  // Output: THIS IS A STRING.*/')]),t._v("\n\n//        17."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("trim")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//删除元素前置及后缀的所有空格，然后返回结果，原数组不变\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/*var str1 = "      hello world   ";\n            var str2 = str1.trim();\n            alert(str1);//返回"      hello world   "\n            alert(str2);//返回"hello world"*/')]),t._v("\n//        18."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("trimLeft")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("trimLeft")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 方法从一个字符串的左端移除空白字符。\n//        19."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("trimRight")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("trimLeft")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 方法从一个字符串的右端移除空白字符。\n////      19\n////        数学对象\n//\n//        1.Math."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("abs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n// 返回一个数字的绝对值（即该值不考虑数字是为正还是为负）。 例如，-5 的绝对值和 5 的绝对值相同。\n//        2.Math."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ceil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//返回大于或等于其数字参数的最小整数。\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*var i=3.5;\n        i=Math.ceil(i);\n        console.log(i);*/")]),t._v("\n\n//        3.Math."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//返回数的余弦值。\n//        4.Math."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//返回数的正弦值\n//        5.Math."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tan")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//返回数的正切值\n//        6.Math."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//返回小于或等于其数值参数的最大整数。\n//        7.Math."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//返回所提供的一组数值表达式中的较大者。\n//        8.Math."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//返回所提供的一组数值表达式中的较小者。\n//        9.Math."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("PI")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//Pi. 这是圆的周长与直径的比率。\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*var radius = 3;\n        var area = Math.PI * radius * radius;\n        document.write(area); // Output: 28.274333882308138*/")]),t._v("\n//        10.Math."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//返回基数表达式的指定次幂的值。\n//        11.Math."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//返回介于 0 和 1 之间的伪随机数。\n//        12.Math."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("round")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//返回所提供的舍入到最近整数的数值表达式。\n\n//        13.Math."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sqrt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//返回一个数的平方根\n//        14.Math."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("trunc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n//    返回数字的整数部分，删除任何小数数字。\n")])])]),s("h5",{attrs:{id:"-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#-4","aria-hidden":"true"}},[t._v("#")])]),t._v(" "),s("h3",{attrs:{id:"_1-对象的遍历方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-对象的遍历方式","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.对象的遍历方式")]),t._v(" "),s("p",[t._v("var obj={")]),t._v(" "),s("p",[t._v("}")]),t._v(" "),s("p",[t._v("for(var i in obj){")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("p",[t._v("}")]),t._v(" "),s("h3",{attrs:{id:"_2-递归拷贝对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-递归拷贝对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.递归拷贝对象")]),t._v(" "),s("h1",{attrs:{id:"dom-bom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom-bom","aria-hidden":"true"}},[t._v("#")]),t._v(" DOM   BOM")]),t._v(" "),s("h3",{attrs:{id:"_1-bom浏览器对象模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-bom浏览器对象模型","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.BOM浏览器对象模型")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("浏览器   window    1.document 2. location 3.history")]),t._v(" "),s("p",[t._v("BOM包含DOM")]),t._v(" "),s("h4",{attrs:{id:"_1-location"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-location","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.location")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("地址的构成")]),t._v(" "),s("p",[t._v("1.网络传输协议       http://    超文本传输协议       https://     加强版  安全性高")]),t._v(" "),s("p",[t._v("2.底层支持       TCP/IP   7层架构构成  http:最上层")]),t._v(" "),s("p",[t._v("3.域名/主机名/主机地址www.sssss.com:80端口号/aa/aa/index.html（路径）? 浏览器自动忽略(查询字符串)    一般默认\t  ？后的东西都是查询字符串")]),t._v(" "),s("p",[t._v("协议  主机名 端口号  路径 查询字符串 锚地址")]),t._v(" "),s("p",[t._v("location.protocol 协议")]),t._v(" "),s("p",[t._v("location.host 主机名加端口号")]),t._v(" "),s("p",[t._v("location.hostname 主机名")]),t._v(" "),s("p",[t._v("location.port 端口号")]),t._v(" "),s("p",[t._v("location.pathname  路径")]),t._v(" "),s("p",[t._v("location.search   查询字符串")]),t._v(" "),s("p",[t._v("location.hash   锚地址  #隔开  位置的跳转   不能实现动画  瞬间到达位置")]),t._v(" "),s("p",[t._v("location.href  网页的完整地址   可以设置 获取    不是个函数")]),t._v(" "),s("p",[t._v("4.方法")]),t._v(" "),s("p",[t._v("location.reload(boolean); 重新加载  加缓存   不加缓存（true  重新加载所有数据）")]),t._v(" "),s("p",[t._v("location.assign('http://www.baidu.com')    和href功能一样  函数运行 有历史记录")]),t._v(" "),s("p",[t._v("location.replace('http://www.baidu.com')     替换      没有历史记录")]),t._v(" "),s("h4",{attrs:{id:"_2-history"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-history","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.history")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("history.length")]),t._v(" "),s("p",[t._v("1.方法")]),t._v(" "),s("p",[t._v("1.history.forward()  next  下一个")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("history.back()  prev   上一个")]),t._v(" "),s("p",[t._v("3.history.go(0)  刷新")])])]),t._v(" "),s("h3",{attrs:{id:"_2-dom-文档对象模型-document-主要对元素操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-dom-文档对象模型-document-主要对元素操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.DOM  文档对象模型     document    主要对元素操作")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("document.URL   输出文档的路径")]),t._v(" "),s("p",[t._v("document.tilte   1.获取文档标题  2.设置文档标题")]),t._v(" "),s("p",[t._v("document.documentElement.clientWidth    浏览器宽度")]),t._v(" "),s("p",[t._v("document.documentElement.clientHeight    浏览器高度")]),t._v(" "),s("h5",{attrs:{id:"对于元素的获取方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对于元素的获取方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 对于元素的获取方法")]),t._v(" "),s("p",[t._v("旧  ：var div=document.getElementsByTagName('div');   获取的是DOM集合   获取标签名的所有元素     能用DOM对象调用")]),t._v(" "),s("p",[t._v("document.getElementsByClassName('class');       IE浏览器没有这个   不支持获取类名的方式     能用DOM对象调用")]),t._v(" "),s("p",[t._v("document.getElementById('id');      不是集合  是元素      不能用DOM对象调用     只能document调用")]),t._v(" "),s("p",[t._v("document.getElementsByName('name');          不能用DOM对象调用    只能document调用  表单name")]),t._v(" "),s("h5",{attrs:{id:"常用获取对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用获取对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 常用获取对象")]),t._v(" "),s("p",[t._v("新 ：  document.querySelector();      支持任意选择器     只能选一个     可以用forEach()  遍历   和css选择器选择方法类似   能用DOM对象调用")]),t._v(" "),s("p",[t._v("document.querySelectorAll();        全选     能用DOM对象调用")]),t._v(" "),s("p",[t._v("属性选择器div[aa=bb]")]),t._v(" "),s("p",[t._v("[...]  扩展运算")]),t._v(" "),s("h3",{attrs:{id:"_3-window对象的属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-window对象的属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.window对象的属性")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("window.alert();")]),t._v(" "),s("p",[t._v("window.prompt();")]),t._v(" "),s("p",[t._v("window.confirm();     与alert类似")]),t._v(" "),s("p",[t._v("window.open();  控制打开窗开的大小等")]),t._v(" "),s("p",[t._v("window.write();")]),t._v(" "),s("p",[t._v("window.screen.width      屏幕的分辨率")]),t._v(" "),s("p",[t._v("window.screen.height    屏幕的分辨率")]),t._v(" "),s("p",[s("strong",[t._v("window.onload     所有资源加载完毕后执行")])]),t._v(" "),s("h4",{attrs:{id:"时间函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#时间函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 时间函数")]),t._v(" "),s("h5",{attrs:{id:"_1-setinterval-在一定的时间内重复不断的做某件事情"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-setinterval-在一定的时间内重复不断的做某件事情","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.setInterval()    在一定的时间内重复不断的做某件事情")]),t._v(" "),s("p",[t._v("参数  1.回调函数   2.时间   单位ms    每隔时间执行")]),t._v(" "),s("p",[t._v("创建时间函数")]),t._v(" "),s("p",[t._v("例如：setInterval(function(){")]),t._v(" "),s("p",[t._v("console.log(1);")]),t._v(" "),s("p",[t._v("},1000);")]),t._v(" "),s("h5",{attrs:{id:"_2-clearinterval"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-clearinterval","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.clearInterval()")]),t._v(" "),s("p",[t._v("清除时间函数")]),t._v(" "),s("p",[t._v("传入setInterval的id")]),t._v(" "),s("h5",{attrs:{id:"_3-settimeout"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-settimeout","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.setTimeout()")]),t._v(" "),s("p",[t._v("用法一样")]),t._v(" "),s("p",[t._v("等一段时间   执行一次函数")]),t._v(" "),s("h5",{attrs:{id:"_4-cleartimeout"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-cleartimeout","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.clearTimeout()")]),t._v(" "),s("p",[t._v("清除 setTimeout")]),t._v(" "),s("p",[t._v("width=div.offsetwidth;    获取宽度")]),t._v(" "),s("h2",{attrs:{id:"事件-初识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件-初识","aria-hidden":"true"}},[t._v("#")]),t._v(" 事件   初识")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("用户的行为   称为事件      加on     加单个")]),t._v(" "),s("h5",{attrs:{id:"_1-鼠标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-鼠标","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.鼠标")]),t._v(" "),s("p",[t._v("click 单击  dblclick  双击    mousemove 鼠标移入   鼠标移动时触发的事件 mousedown鼠标上的按钮被按下了 \t    mouseup 鼠标按下后，松开时激发的事件    mouseover当鼠标移动到某对象范围的上方时触发的事件    mouseout 当鼠标离开某对象范围时触发的事件")]),t._v(" "),s("p",[t._v("mouseenter  进入   mouseleave  离开")]),t._v(" "),s("h5",{attrs:{id:"_2-键盘"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-键盘","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.键盘")]),t._v(" "),s("p",[t._v("keydown  按下  keypress  按住    keyup  抬起    加给document    打印键  非打印键")]),t._v(" "),s("p",[t._v("blur 失去焦点  focus 获取焦点 光标闪动   submit  提交加form  reset  重置 加form  change 改变里面值  失去焦点触发change   用于表单元素")]),t._v(" "),s("p",[t._v("事件是一些特殊的属性或者方法")]),t._v(" "),s("h2",{attrs:{id:"内容-对元素css样式的操作-对元素html的操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内容-对元素css样式的操作-对元素html的操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 内容     对元素CSS样式的操作    对元素HTML的操作")]),t._v(" "),s("h3",{attrs:{id:"_1内容设置操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1内容设置操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 1内容设置操作")]),t._v(" "),s("h5",{attrs:{id:"_1-innerhtml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-innerhtml","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.innerHTML")]),t._v(" "),s("p",[t._v("​\t1.可以识别标签")]),t._v(" "),s("p",[t._v("​\t2.设置 所有东西重新写")]),t._v(" "),s("h5",{attrs:{id:"_2-innertext"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-innertext","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.innerText")]),t._v(" "),s("p",[t._v("​\t1.只能获取文本")]),t._v(" "),s("p",[t._v("​\t2.不识别标签")]),t._v(" "),s("h3",{attrs:{id:"_2-html属性的操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-html属性的操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.html属性的操作")]),t._v(" "),s("p",[t._v("class  id  src href     对象.html属性")]),t._v(" "),s("p",[t._v("通过id 或者类名  改变")]),t._v(" "),s("p",[t._v("classname")]),t._v(" "),s("p",[t._v("​\t1.classlist.add()  添加")]),t._v(" "),s("p",[t._v("​\t2.classlist.remove()    移除")]),t._v(" "),s("p",[t._v("​\t3.classlist.toggle()")]),t._v(" "),s("ol",[s("li",[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("myDiv.classList.toggle('myCssClass'); //现在是增加\nmyDiv.classList.toggle('myCssClass'); //现在是删除\n")])])]),s("p",[t._v("这个方法的作用就是，当myDiv元素上没有这个CSS类时，它就新增这个CSS类；如果myDiv元素已经有了这个CSS类，它就是删除它。就是反转操作。")]),t._v(" "),s("p",[t._v("4.classList.contains()       检查是否含有某个CSS类")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("myDiv.classList.contains('myCssClass'); //returns true or false\t\n")])])]),s("p",[t._v("​")])])]),t._v(" "),s("h5",{attrs:{id:"_1-自定义属性-非标准"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-自定义属性-非标准","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.自定义属性(非标准)")]),t._v(" "),s("p",[t._v("访问方式和标准属性不一样     attributes  保存所有的属性")]),t._v(" "),s("p",[t._v("访问 obj .getAttribute('自定义属性');     设置  obj .setAttribute('自定义属性','新');")]),t._v(" "),s("h5",{attrs:{id:"_2-标准属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-标准属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.标准属性")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("obj.")])]),t._v(" "),s("li",[s("p",[t._v("a.访问 obj .getAttribute()      它只有一个参数——你打算查询的属性的名字")]),t._v(" "),s("p",[t._v("b.设置  obj .setAttribute('自定义属性','新');")])])]),t._v(" "),s("h3",{attrs:{id:"_3-操作样式-css"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-操作样式-css","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.操作样式 CSS")]),t._v(" "),s("h5",{attrs:{id:"_1-设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-设置","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.设置")]),t._v(" "),s("p",[t._v("​\t1.obj.style.xxx=' ';     出现在行内")]),t._v(" "),s("p",[t._v("​\t2.obj.style.cssText='width: ; 等等 ';")]),t._v(" "),s("h5",{attrs:{id:"_2-获取"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-获取","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.获取")]),t._v(" "),s("p",[t._v("​\t1.obj.style.样式       只能获取行内样式")]),t._v(" "),s("p",[t._v("​\t2.window.getComputedStyle(obj,null).width;         1.div   获取的对象    2.null  固定值      IE6.7.8 不能用  =>  （div.currentStyle.width;）")]),t._v(" "),s("h4",{attrs:{id:"选项卡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选项卡","aria-hidden":"true"}},[t._v("#")]),t._v(" 选项卡")]),t._v(" "),s("p",[t._v("1.获取元素  2.遍历   3.先清除所有   4.加js")]),t._v(" "),s("h1",{attrs:{id:"-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#-5","aria-hidden":"true"}},[t._v("#")]),t._v(" ****")]),t._v(" "),s("h5",{attrs:{id:"如果一个块元素不设置宽高-，默认宽度是父元素的宽度，默认的高度的是内容的高度-可以用此特性代替box-sizing属性-但是获取的宽高是设置的宽高"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如果一个块元素不设置宽高-，默认宽度是父元素的宽度，默认的高度的是内容的高度-可以用此特性代替box-sizing属性-但是获取的宽高是设置的宽高","aria-hidden":"true"}},[t._v("#")]),t._v(" 如果一个块元素不设置宽高 ，默认宽度是父元素的宽度，默认的高度的是内容的高度    可以用此特性代替box-sizing属性  但是获取的宽高是设置的宽高")]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"_1-获取实际宽高-offset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-获取实际宽高-offset","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.获取实际宽高 offset")]),t._v(" "),s("p",[t._v("width=div.offsetWidth;    height=div.offsetHeight;   获取到的数值类型   不包含margin值")]),t._v(" "),s("h4",{attrs:{id:"_2-获取位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-获取位置","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.获取位置")]),t._v(" "),s("p",[t._v("place=div.offsetLeft;      place=div.offsetTop;     1.如果一个元素不定位  默认依照body定位   2.如果定位依照谁定位  默认依照谁计算")]),t._v(" "),s("p",[t._v("一个元素依照另一个元素定位 padding不影响定位")]),t._v(" "),s("h5",{attrs:{id:"offsetleft、offsettop计算的距离有定位属性的上级元素的距离，如果没有定位属性的上级元素，计算的是距离body的值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#offsetleft、offsettop计算的距离有定位属性的上级元素的距离，如果没有定位属性的上级元素，计算的是距离body的值","aria-hidden":"true"}},[t._v("#")]),t._v(" offsetLeft、offsetTop计算的距离有定位属性的上级元素的距离，如果没有定位属性的上级元素，计算的是距离body的值")]),t._v(" "),s("p",[t._v("任何一个元素都可以具有滚动条      overflow: scroll;    出现滚动条")]),t._v(" "),s("h4",{attrs:{id:"_3-获取滚动条的高度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-获取滚动条的高度","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.获取滚动条的高度")]),t._v(" "),s("p",[t._v("​\t1.document.body.scrollTop     只在谷歌浏览器适用      可以设置   设置默认值   要看自定义高度 关闭浏览器重新打开  不加单位")]),t._v(" "),s("p",[t._v("​\t2.document.documentElement.scrollTop     只在火狐浏览器适用      不加单位")]),t._v(" "),s("p",[t._v("SEO 搜索引擎优化")]),t._v(" "),s("p",[t._v("window.onscroll=function(){")]),t._v(" "),s("p",[t._v("滚动事件浏览器滚动不断触发onscroll事件")]),t._v(" "),s("p",[t._v("}")]),t._v(" "),s("h1",{attrs:{id:"节点内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#节点内容","aria-hidden":"true"}},[t._v("#")]),t._v(" 节点内容")]),t._v(" "),s("blockquote",[s("p",[t._v("html文档中，所有的构成部分都是节点，每一个节点和节点之间的关系构成整个html文档树模型")])]),t._v(" "),s("h4",{attrs:{id:"_1-节点的特征"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-节点的特征","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.节点的特征")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("nodeName 节点名字\nnodeType 节点类型\nnodeValue 节点值\n")])])]),s("h5",{attrs:{id:"_1、文档节点-document"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、文档节点-document","aria-hidden":"true"}},[t._v("#")]),t._v(" 1、文档节点(document)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("nodeName:#document      nodeType: 9       nodeValue:null\n")])])]),s("h5",{attrs:{id:"_2、文本节点-文本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、文本节点-文本","aria-hidden":"true"}},[t._v("#")]),t._v(" 2、文本节点(文本)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("nodeName:#TEXT       nodeType: 3        nodeValue:文本内容\n")])])]),s("h5",{attrs:{id:"_3、元素节点-div"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、元素节点-div","aria-hidden":"true"}},[t._v("#")]),t._v(" 3、元素节点(div)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("nodeName:大写的标签名       nodeType: 1            nodeValue：null\n注意：div.id不是一个节点值\n")])])]),s("h5",{attrs:{id:"_4、注释节点-注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、注释节点-注释","aria-hidden":"true"}},[t._v("#")]),t._v(" 4、注释节点(注释)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("nodeName:#comment      nodeType:8          nodeValue：属性值\n")])])]),s("h5",{attrs:{id:"_5、属性节点-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、属性节点-属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 5、属性节点(属性)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("nodeName:属性名\t\t\tnodeType: 2         nodeValue：属性值\n")])])]),s("h4",{attrs:{id:"_2-节点之间的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-节点之间的关系","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.节点之间的关系")]),t._v(" "),s("h5",{attrs:{id:"_1-同辈关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-同辈关系","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.同辈关系")]),t._v(" "),s("blockquote",[s("p",[t._v("console.log(div.previousSibling)           所有节点范围内的上一个节点")])]),t._v(" "),s("blockquote",[s("p",[t._v("previousElementSibling\t\t\t\t上一个元素节点")])]),t._v(" "),s("blockquote",[s("p",[t._v("console.log(div.nextSibling)\t\t\t所有节点范围内的下一个节点")])]),t._v(" "),s("blockquote",[s("p",[t._v("console.log(div.nextElementSlibing)\t\t\t下一个元素节点")])]),t._v(" "),s("h5",{attrs:{id:"_2-父辈关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-父辈关系","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.父辈关系")]),t._v(" "),s("blockquote",[s("p",[t._v("div.childNodes         所有节点")])]),t._v(" "),s("blockquote",[s("p",[t._v("div.children              所有元素节点")])]),t._v(" "),s("blockquote",[s("p",[t._v("div.children.length     节点长度")])]),t._v(" "),s("h5",{attrs:{id:"_3-子对父辈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-子对父辈","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.子对父辈")]),t._v(" "),s("p",[t._v("div.parentNode        输出父辈所有节点")]),t._v(" "),s("p",[t._v("div.parentElement      输出")]),t._v(" "),s("h4",{attrs:{id:"_3-节点的创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-节点的创建","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.节点的创建")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var newdiv = docment.createElement('div')         只存在于内存里面\nvar body = document.querySelector('body')\t\t//添加子节点\nbody.appendChild(newdiv)\t\t//添加一个div\n\nnewdiv.id='box'\n")])])]),s("h4",{attrs:{id:"节点的追加"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#节点的追加","aria-hidden":"true"}},[t._v("#")]),t._v(" 节点的追加")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let sec = document.querySeletor('section');\t\t//获取section\nlet a = document.createElement('a')               \nlet par = sec.parentNode;        //获取父节点\npar.inserBefore(a,sec)\t\t\t//把a放到sec元素之前\n")])])]),s("h4",{attrs:{id:"节点的删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#节点的删除","aria-hidden":"true"}},[t._v("#")]),t._v(" 节点的删除")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let sec = document.querySeletor('section');\nlet par =sec.parentNode;\npar.removeChild(sec);\n用父元素移除子元素\n后续处理   sec=null;\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("par.replaceChild(a,sec)\n替换元素        替换的元素     要被替换的元素\n")])])]),s("h4",{attrs:{id:"节点的复制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#节点的复制","aria-hidden":"true"}},[t._v("#")]),t._v(" 节点的复制")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("document.createElement()创建元素\nobj.appendChild()  \n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var div = document.querySeletor('div');\nvar clone = div.clonenode(ture)  //写ture会克隆所有子节点\n")])])]),s("h1",{attrs:{id:"事件-对象继续"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件-对象继续","aria-hidden":"true"}},[t._v("#")]),t._v(" 事件   对象继续")]),t._v(" "),s("h4",{attrs:{id:"_1-事件源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-事件源","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.事件源")]),t._v(" "),s("blockquote",[s("p",[t._v("事件发生在谁的身上，谁是事件源")])]),t._v(" "),s("h4",{attrs:{id:"_2-事件类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-事件类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.事件类型")]),t._v(" "),s("blockquote",[s("p",[t._v("用户行为")])]),t._v(" "),s("h4",{attrs:{id:"_3-事件处理程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-事件处理程序","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.事件处理程序")]),t._v(" "),s("blockquote",[s("p",[t._v("事件发生后的响应")])]),t._v(" "),s("h5",{attrs:{id:"同一个元素添加多个事件添加属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同一个元素添加多个事件添加属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 同一个元素添加多个事件添加属性")]),t._v(" "),s("p",[t._v("obj.addEventListener('添加事件 一般不加on','事件处理函数function(){}',false(固定值 可以不写) );    不会覆盖    IE低版本不支持")]),t._v(" "),s("p",[t._v("obj.attachEvent('on+事件'，'函数名');\t\t\tIE 低版本添加")]),t._v(" "),s("h5",{attrs:{id:"事件删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件删除","aria-hidden":"true"}},[t._v("#")]),t._v(" 事件删除")]),t._v(" "),s("p",[t._v("obj.removeEventListener('移除的事件'，'函数名称');")]),t._v(" "),s("p",[t._v("obj.detachEvent(' on+事件'，'函数名')       IE  低版本删除")]),t._v(" "),s("h4",{attrs:{id:"_4-事件对象-一般用e来表示-接收"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-事件对象-一般用e来表示-接收","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.事件对象   一般用e来表示 接收")]),t._v(" "),s("blockquote",[s("p",[t._v("事件对象是事件发生的时候的，自动创建的对象的一个对象，用来保存事件发生时候的所有信息  在匿名函数里加实参e  默认第一个参数传递")])]),t._v(" "),s("h5",{attrs:{id:"鼠标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#鼠标","aria-hidden":"true"}},[t._v("#")]),t._v(" 鼠标")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("altkey")])]),t._v(" "),s("li",[s("p",[t._v("cancelBubble")])]),t._v(" "),s("li",[s("p",[t._v("clientX    clientY      距离浏览器窗口的距离")]),t._v(" "),s("ol",[s("li",[s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("div"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onclick"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("move"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("move")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerText"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`x:")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientX"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(",y:")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientY"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("ctrlKey")])]),t._v(" "),s("li",[s("p",[t._v("detail")])]),t._v(" "),s("li",[s("p",[t._v("offsetX    offsetY        距离当前元素(事件源)的距离")])]),t._v(" "),s("li",[s("p",[t._v("pageX     pageY            一般移动端使用    距离body的距离")])]),t._v(" "),s("li",[s("p",[t._v("screenX    screenY     距离屏幕的距离")])]),t._v(" "),s("li",[s("p",[t._v("shiftKey")])]),t._v(" "),s("li",[s("p",[t._v("srcElement")])]),t._v(" "),s("li",[s("p",[t._v("target")])]),t._v(" "),s("li",[s("p",[t._v("type")])]),t._v(" "),s("li",[s("p",[t._v("which")])])]),t._v(" "),s("h4",{attrs:{id:"e的兼容性处理-ie-window-event"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#e的兼容性处理-ie-window-event","aria-hidden":"true"}},[t._v("#")]),t._v(" e的兼容性处理   IE    window.event")]),t._v(" "),s("h5",{attrs:{id:"键盘事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#键盘事件","aria-hidden":"true"}},[t._v("#")]),t._v(" 键盘事件")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("e.keycode  ascii码值")])]),t._v(" "),s("li",[s("p",[t._v("e.key     按下的值")])]),t._v(" "),s("li",[s("p",[t._v("e.type    事件类型")])]),t._v(" "),s("li",[s("p",[t._v("e.altkey      验证altkey、shiftkey、ctrlkey 有没有被按下")])]),t._v(" "),s("li",[s("p",[t._v("e.shiftkey")])]),t._v(" "),s("li",[s("p",[t._v("e.ctrlkey")]),t._v(" "),s("ul",[s("li",[t._v("37:左 38:上  39:右  40: 下     32:空格    13:回车       ascii码值")])]),t._v(" "),s("p",[t._v("获取表单的 值  value")])])]),t._v(" "),s("h5",{attrs:{id:"滚轮事件-mousewheel"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#滚轮事件-mousewheel","aria-hidden":"true"}},[t._v("#")]),t._v(" 滚轮事件    mousewheel")]),t._v(" "),s("p",[t._v("wheelDelta:120     向上     谷歌")]),t._v(" "),s("p",[t._v("wheelDelta:-120     向下")]),t._v(" "),s("p",[t._v("detail   向下 3   向上-3      火狐")]),t._v(" "),s("p",[t._v("e.preventDefault();   阻止默认动作    谷歌  火狐    方法")]),t._v(" "),s("p",[t._v("e.returnValue=false;    IE       属性    阻止默认动作")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wheel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义函数  作为参数传入添加的滚轮事件")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//e做兼容 事件对象做兼容   现在浏览器支持e ，IE低window.event")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("preventDefalt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//清除浏览器默认的动作   做兼容")]),t._v("\n                    e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("preventDefault")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//谷歌  火狐 支持")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("returnValue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//IE 低版本 支持")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wheelDelta"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("detail"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断 鼠标滚轮移动方向")]),t._v("\n                    div"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetWidth"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'px'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//向上加宽度")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wheelDelta"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("detail"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    div"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetWidth"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'px'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//向下减宽度")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//            添加滚轮事件    做兼容 判断浏览器是否支持add")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("attachEvent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                div"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("attachEvent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'onmousewheel'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("wheel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                div"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mousewheel'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wheel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                div"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'DOMMouseScroll'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wheel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h5",{attrs:{id:"-6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#-6","aria-hidden":"true"}},[t._v("#")])]),t._v(" "),s("ul",[s("li",[t._v("transitionend       animationend\n"),s("ul",[s("li",[t._v("addEventListener('transitionend',function(){},false)")]),t._v(" "),s("li",[t._v("addEventListener('animationend',function(){},false)")])])])]),t._v(" "),s("h4",{attrs:{id:"添加方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加方式","aria-hidden":"true"}},[t._v("#")]),t._v(" 添加方式")]),t._v(" "),s("p",[t._v("div.attachEvent('onmousewheel',wheel);     IE")]),t._v(" "),s("p",[t._v("div.addEventListener('mousewheel', wheel);    谷歌")]),t._v(" "),s("p",[t._v("div.addEventListener('DOMMouseScroll', wheel);     火狐")]),t._v(" "),s("h4",{attrs:{id:"事件流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件流","aria-hidden":"true"}},[t._v("#")]),t._v(" 事件流")]),t._v(" "),s("p",[t._v("事件发生的顺序")]),t._v(" "),s("h4",{attrs:{id:"_1-冒泡性事件流-重点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-冒泡性事件流-重点","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.冒泡性事件流    重点")]),t._v(" "),s("p",[t._v("当一个事件触发的时候，当前元素的父元素乃至整个页面都会以一定的顺序来响应事件，事件响应的顺序叫做事件流")]),t._v(" "),s("p",[s("strong",[t._v("只要是事件都会冒泡    除了 mouseenter      mouseleave")])]),t._v(" "),s("h6",{attrs:{id:"_1-阻止事件流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-阻止事件流","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.阻止事件流")]),t._v(" "),s("p",[t._v("e.stopPropagation();       阻止事件流   阻止事件传递")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("例如：\nson.onclick=function(e){         \n\tif(e.stopPropagation){\n      e.stopPropagation();  //   阻止事件流   阻止传播\n       e.preventDefault(); //清除浏览器默认的动作   做兼容\n\t}\n\telse{\n      e.cancelBubble=true;\n      e.returnValue=false; \n\t}\n    console.log('son冒泡');\n};  \n")])])]),s("h4",{attrs:{id:"_2-捕获型事件流-了解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-捕获型事件流-了解","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.捕获型事件流    了解")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("从根元素往下执行")])]),t._v(" "),s("li",[s("p",[t._v("obj.addEventListener('事件',function(){},true);       true  会被捕获到")])])]),t._v(" "),s("h4",{attrs:{id:"_3-整个事件流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-整个事件流","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.整个事件流")]),t._v(" "),s("ul",[s("li",[t._v("先从html向下捕获，再从当前元素向上冒泡")])]),t._v(" "),s("h4",{attrs:{id:"_4-事件委托"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-事件委托","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.事件委托")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("将子元素的事件委托给父元素")])])]),t._v(" "),s("ul",[s("li",[t._v("需要做判断 点击的事件是是否是想要的事件")])]),t._v(" "),s("h6",{attrs:{id:"_1-新加的元素，需要事件时"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-新加的元素，需要事件时","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.新加的元素，需要事件时")]),t._v(" "),s("h6",{attrs:{id:"_2-做事件优化时"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-做事件优化时","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.做事件优化时")]),t._v(" "),s("h6",{attrs:{id:"_3-当使用ajax-的时候"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-当使用ajax-的时候","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.当使用ajax 的时候")]),t._v(" "),s("h4",{attrs:{id:"_5-目标事件源："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-目标事件源：","aria-hidden":"true"}},[t._v("#")]),t._v(" 5.目标事件源：")]),t._v(" "),s("ul",[s("li",[t._v("真正触发事件的元素")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//目标事件源")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断是否为自己想要的元素   执行")]),t._v("\n    \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ntagname    大写\nnodeName   大写\n")])])]),s("h6",{attrs:{id:"表格："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表格：","aria-hidden":"true"}},[t._v("#")]),t._v(" 表格：")]),t._v(" "),s("p",[t._v("table-layout: fixed;    固定宽度")]),t._v(" "),s("p",[t._v("border-collapse: collapse;    合并边框")]),t._v(" "),s("h1",{attrs:{id:"事件问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件问题","aria-hidden":"true"}},[t._v("#")]),t._v(" 事件问题")]),t._v(" "),s("h1",{attrs:{id:"日期对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#日期对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 日期对象")]),t._v(" "),s("p",[t._v("格林尼治时间    GMT时间     一段时间有几秒偏差")]),t._v(" "),s("p",[t._v("本初子午线    0度经线")]),t._v(" "),s("p",[t._v("UTC时间     世界协调时")]),t._v(" "),s("p",[t._v("计算机元时间  1970  1  1  0   0   0   0\t   前为负  后为正")]),t._v(" "),s("p",[t._v("当前时间距离1970的毫秒数")]),t._v(" "),s("h5",{attrs:{id:"实例化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例化","aria-hidden":"true"}},[t._v("#")]),t._v(" 实例化")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("var time=new Date()")])]),t._v(" "),s("li",[s("p",[t._v("gettime()   当前毫秒数  距离元时间")])]),t._v(" "),s("li",[s("p",[t._v("getFullYear       getMonth    getDay获取星期1~6 0代表周日   getDate  getHours    getMinutes    getSeconds    GetMilliseconds")])]),t._v(" "),s("li",[s("p",[t._v("get  换成   set  设置时间")])]),t._v(" "),s("li",[s("blockquote",[s("p",[t._v("月 日 年 时 分 秒")]),t._v(" "),s("p",[t._v("随意设置   2017, 12, 12, 12, 12, 12, 12,123    月份0~11   代表1~12")])]),t._v(" "),s("p",[t._v("倒计时 距离2017.12.1.8   天 时 分 秒")])])]),t._v(" "),s("h5",{attrs:{id:"cookie-字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie-字符串","aria-hidden":"true"}},[t._v("#")]),t._v(" cookie        字符串")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("本地保存")])]),t._v(" "),s("li",[s("p",[t._v("键值对结构    search")])]),t._v(" "),s("li",[s("p",[t._v("大小   4k")])]),t._v(" "),s("li",[s("p",[t._v("同域原则   域名")])]),t._v(" "),s("li",[s("p",[t._v("不能跨浏览器访问")])]),t._v(" "),s("li",[s("p",[t._v("临时型cookie")]),t._v(" "),s("ul",[s("li",[t._v("document.cookie='aa=bb';  可以设置所有cookie    可以访问所有cookie\n"),s("ul",[s("li",[t._v("浏览器打开  关闭  ->生命周期")])])])])]),t._v(" "),s("li",[s("p",[t._v("expirs 有效期      时间cookie        ';expires='+now.toGMTSring();  有效期")])]),t._v(" "),s("li",[s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" now"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aa=bb;expires='")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toGMTString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("setcookie()  设置   有生命周期")])]),t._v(" "),s("li",[s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    setcookie();")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   设置cookie  临时 有生命周期的")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   键值对        键 key    值value")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setcookie")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        根据有无时间来区分添加的是临时的还是有生命周期的")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" now"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建新对象")]),t._v("\n            now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("time"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置时间   time*1000转化为秒")]),t._v("\n            document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'='")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("';expires='")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toGMTString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//添加cookie cookie时间")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'='")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//无生命周期 添加cookie")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])]),t._v(" "),s("li",[s("p",[t._v("​")])]),t._v(" "),s("li",[s("p",[t._v("delcookie()    删除")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      delcookie();")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//          删除cookie")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         cookie过期自动删除")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("delcookie")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" now"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建新对象")]),t._v("\n        now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置过期时间")]),t._v("\n        document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nullll'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("';expires='")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toGMTString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("​")])]),t._v(" "),s("li",[s("p",[t._v("getcookie()    获取")])]),t._v(" "),s("li",[s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    getcookie();")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取cookie  从键  获取   值")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getcookie")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cookies"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取所有cookie")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cool"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("cookies"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'; '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将cookie里字符串转化为数组    split分割字符串转化为数组")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//声明一个变量")]),t._v("\n        cool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" co"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'='")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//继续将字符串转化为数组   以=为分割符")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("co"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断键值是否为要获取的")]),t._v("\n                val"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("co"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将值赋值给一个变量")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])])]),t._v(" "),s("h5",{attrs:{id:"本地存储-h5新增"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地存储-h5新增","aria-hidden":"true"}},[t._v("#")]),t._v(" 本地存储   H5新增")]),t._v(" "),s("ol",[s("li",[t._v("localStroage      永久存储     locaStroage.setItem('name','xiaosi');设置   removeItem  去除    getItem  获取")]),t._v(" "),s("li",[t._v("sessionStroage    会话级存储   （窗口）会话关闭就删除\n"),s("ul",[s("li",[t._v("存储大小5~10MB")]),t._v(" "),s("li",[t._v("同域原则")]),t._v(" "),s("li",[t._v("不能跨浏览器")]),t._v(" "),s("li",[t._v("以上存储都不安全")]),t._v(" "),s("li",[t._v("拥有相同的函数")]),t._v(" "),s("li",[t._v("clear（清空）  getTtem")]),t._v(" "),s("li",[t._v("只能存储字符串")]),t._v(" "),s("li",[t._v("delete  删除")]),t._v(" "),s("li",[t._v("​")])])])]),t._v(" "),s("p",[t._v("database  数据")]),t._v(" "),s("p",[t._v("数组存储对象")]),t._v(" "),s("p",[t._v("JSON.stringify();    转化为字符串")]),t._v(" "),s("p",[t._v("JSON.parse();     转化为对象  解析")])])}],!1,null,null,null);a.default=e.exports}}]);